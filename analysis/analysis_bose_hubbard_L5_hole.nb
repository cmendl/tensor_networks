(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    151737,       3371]
NotebookOptionsPosition[    148946,       3277]
NotebookOutlinePosition[    149289,       3292]
CellTagsIndexPosition[    149246,       3289]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bose-Hubbard model simulation", "Section"],

Cell[TextData[{
 "References:\n\tF. Verstraete, V. Murg, J. I. Cirac\n\tMatrix product \
states, projected entangled pair states, and variational renormalization \
group methods for quantum spin systems\n\tAdvances in Physics 57, 143-224 \
(2008) ",
 ButtonBox["DOI",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dx.doi.org/10.1080/14789940801912366"], None},
  ButtonNote->"http://dx.doi.org/10.1080/14789940801912366"],
 "\n\n\tThomas Barthel\n\tPrecise evaluation of thermal response functions by \
optimized density matrix renormalization group schemes\n\tNew Journal of \
Physics 15, 073010 (2013) ",
 ButtonBox["DOI",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dx.doi.org/10.1088/1367-2630/15/7/073010"], None},
  ButtonNote->"http://dx.doi.org/10.1088/1367-2630/15/7/073010"]
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SparseIdentityMatrix", "[", "d_", "]"}], ":=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SiteCreateOp", "[", "M_", "]"}], ":=", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "M"}], "]"}], "]"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SiteAnnihilOp", "[", "M_", "]"}], ":=", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "M"}], "]"}], "]"}], ",", "1"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NumberOp", "[", "M_", "]"}], ":=", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "M"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"construct", " ", "Bose"}], "-", 
    RowBox[{
    "Hamiltonian", " ", "with", " ", "open", " ", "boundary", " ", 
     "conditions"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HBose", "[", 
     RowBox[{"t_", ",", "U_", ",", "\[Mu]_", ",", "M_", ",", "1"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["U", "2"], 
      RowBox[{
       RowBox[{"NumberOp", "[", "M", "]"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NumberOp", "[", "M", "]"}], "-", 
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"M", "+", "1"}], "]"}]}], ")"}]}]}], "-", 
     RowBox[{"\[Mu]", " ", 
      RowBox[{"NumberOp", "[", "M", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HBose", "[", 
     RowBox[{"t_", ",", "U_", ",", "\[Mu]_", ",", "M_", ",", "L_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "t"}], " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"j", "-", "1"}]], "]"}], ",", 
           RowBox[{"SiteCreateOp", "[", "M", "]"}], ",", 
           RowBox[{"SiteAnnihilOp", "[", "M", "]"}], ",", 
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}], "+", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"j", "-", "1"}]], "]"}], ",", 
           RowBox[{"SiteAnnihilOp", "[", "M", "]"}], ",", 
           RowBox[{"SiteCreateOp", "[", "M", "]"}], ",", 
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"L", "-", "1"}]}], "}"}]}], "]"}]}], "+", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"SparseIdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"M", "+", "1"}], ")"}], 
           RowBox[{"j", "-", "1"}]], "]"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["U", "2"], 
           RowBox[{
            RowBox[{"NumberOp", "[", "M", "]"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NumberOp", "[", "M", "]"}], "-", 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"M", "+", "1"}], "]"}]}], ")"}]}]}], "-", 
          RowBox[{"\[Mu]", " ", 
           RowBox[{"NumberOp", "[", "M", "]"}]}]}], ",", 
         RowBox[{"SparseIdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"M", "+", "1"}], ")"}], 
           RowBox[{"L", "-", "j"}]], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "L"}], "}"}]}], "]"}]}]}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["Simulation parameters", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"kinetic", " ", "hopping", " ", "parameter"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["tH", "val"], "=", "1"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"interaction", " ", "strength"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["U", "val"], "=", "5"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"chemical", " ", "potential"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Mu]", "val"], "=", 
    FractionBox["1", "7"]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "lattice", " ", "sites"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "val"], "=", "5"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "single", " ", "site", " ", "occupation", " ", "number", " ", "cut"}], 
    "-", "off"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["M", "val"], "=", "2"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"inverse", " ", "temperature"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Beta]", "val"], "=", 
    RowBox[{"3", "/", "5"}]}], ";"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["t", "list"], "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "5", ",", 
     RowBox[{"1", "/", "4"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "%", "]"}]}], "Input"],

Cell[BoxData["21"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Out-of-time-order correlations", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OperatorAverage", "[", 
   RowBox[{"A_", ",", "H_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"exp\[Beta]H", "=", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", "H"}], "]"}]}], "}"}], ",", 
    FractionBox[
     RowBox[{"Tr", "[", 
      RowBox[{"exp\[Beta]H", ".", "A"}], "]"}], 
     RowBox[{"Tr", "[", "exp\[Beta]H", "]"}]]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GF", "[", 
   RowBox[{"A_", ",", "B_", ",", "H_", ",", "\[Beta]_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"exp\[Beta]H", "=", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", "H"}], "]"}]}], ",", 
      RowBox[{"At", "=", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}], ".", 
        "A", ".", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "H"}], "]"}]}]}]}], "}"}], 
    ",", 
    FractionBox[
     RowBox[{"Tr", "[", 
      RowBox[{"exp\[Beta]H", ".", "At", ".", "B"}], "]"}], 
     RowBox[{"Tr", "[", "exp\[Beta]H", "]"}]]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SiteCreateOpFull", "[", 
   RowBox[{"j_", ",", "M_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], "j"], "]"}], ",", 
    RowBox[{"SiteCreateOp", "[", "M", "]"}], ",", 
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], 
      RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SiteAnnihilOpFull", "[", 
   RowBox[{"j_", ",", "M_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], "j"], "]"}], ",", 
    RowBox[{"SiteAnnihilOp", "[", "M", "]"}], ",", 
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], 
      RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SiteNumberOpFull", "[", 
   RowBox[{"j_", ",", "M_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], "j"], "]"}], ",", 
    RowBox[{"NumberOp", "[", "M", "]"}], ",", 
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], 
      RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["fn", "import"], "=", 
   RowBox[{"\"\<../output/bose_hubbard/L\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["L", "val"], "]"}], "<>", "\"\<_hole/bose_hubbard_L\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["L", "val"], "]"}], "<>", "\"\<_M\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["M", "val"], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "read", " ", "simulation", " ", "results", " ", "from", " ", "disk"}], " ", 
  "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["gfhole", "list"], "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["fn", "import"], "<>", "\"\<_gfhole.dat\>\""}], ",", 
     "\"\<Complex128\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "%", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", "21", "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["i", "site"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["j", "site"], "=", "3"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"reference", " ", "calculation"}], " ", "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tH", "=", 
       SubscriptBox["tH", "val"]}], ",", 
      RowBox[{"U", "=", 
       SubscriptBox["U", "val"]}], ",", 
      RowBox[{"\[Mu]", "=", 
       SubscriptBox["\[Mu]", "val"]}], ",", 
      RowBox[{"M", "=", 
       SubscriptBox["M", "val"]}], ",", 
      RowBox[{"L", "=", 
       SubscriptBox["L", "val"]}], ",", 
      RowBox[{"\[Beta]", "=", 
       SubscriptBox["\[Beta]", "val"]}], ",", "HB"}], "}"}], ",", 
    RowBox[{
     RowBox[{"HB", "=", 
      RowBox[{"N", "[", 
       RowBox[{"HBose", "[", 
        RowBox[{"tH", ",", "U", ",", "\[Mu]", ",", "M", ",", "L"}], "]"}], 
       "]"}]}], ";", 
     RowBox[{
      SubscriptBox["gfhole", 
       RowBox[{"list", ",", "ref"}]], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"GF", "[", 
         RowBox[{
          RowBox[{"SiteAnnihilOpFull", "[", 
           RowBox[{
            RowBox[{"L", "-", 
             SubscriptBox["i", "site"], "-", "1"}], ",", "M", ",", "L"}], 
           "]"}], ",", 
          RowBox[{"SiteCreateOpFull", "[", 
           RowBox[{
            RowBox[{"L", "-", 
             SubscriptBox["j", "site"], "-", "1"}], ",", "M", ",", "L"}], 
           "]"}], ",", "HB", ",", "\[Beta]", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          SubscriptBox["t", "list"]}], "}"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  SubscriptBox["gfhole", 
   RowBox[{"list", ",", "ref"}]], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "21", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "compare", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["gfhole", "list"], "-", 
     SubscriptBox["gfhole", 
      RowBox[{"list", ",", "ref"}]]}], ",", "\[Infinity]"}], "]"}]}]], "Input"],

Cell[BoxData["0.000028916602926670754`"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["plot", "label"], "=", 
   RowBox[{
   "\"\<Bose-Hubbard model with\\n\!\(\*SubscriptBox[\(t\), \(H\)]\)=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["tH", "val"], "]"}], "<>", "\"\<, U=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["U", "val"], "]"}], "<>", "\"\<, \[Mu]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"InputForm", "[", 
      SubscriptBox["\[Mu]", "val"], "]"}], "]"}], "<>", "\"\<, M=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["M", "val"], "]"}], "<>", "\"\<, L=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["L", "val"], "]"}], "<>", "\"\<, \[Beta]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"N", "[", 
      SubscriptBox["\[Beta]", "val"], "]"}], "]"}], "<>", 
    "\"\<\\nsites: i=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["i", "site"], "]"}], "<>", "\"\<, j=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["j", "site"], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["fn", "export"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\"\<plots/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", "#", "<>", 
      "\"\<_\>\""}], "&"}], "[", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["t", "list"], ",", 
          RowBox[{"Re", "[", 
           SubscriptBox["gfhole", "list"], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["t", "list"], ",", 
          RowBox[{"Im", "[", 
           SubscriptBox["gfhole", "list"], "]"}]}], "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t\>\"", ",", 
        "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(b\), \(j\)]\)(t) \
\!\(\*SubsuperscriptBox[\(b\), \(i\), \
\(\[Dagger]\)]\)(0)\!\(\*SubscriptBox[\(\[RightAngleBracket]\), \
\(\[Beta]\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       SubscriptBox["plot", "label"], "<>", 
       "\"\<\\nred: independent reference calculation\>\""}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["t", "list"], ",", 
            RowBox[{"Re", "[", 
             SubscriptBox["gfhole", 
              RowBox[{"list", ",", "ref"}]], "]"}]}], "}"}], "]"}], "]"}], 
        "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["t", "list"], ",", 
            RowBox[{"Im", "[", 
             SubscriptBox["gfhole", 
              RowBox[{"list", ",", "ref"}]], "]"}]}], "}"}], "]"}], "]"}], 
        "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["fn", "export"], "<>", "\"\<gfhole_L\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SubscriptBox["L", "val"], "]"}], "<>", "\"\<.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {
       Hue[0.67, 0.6, 0.6], 
       Directive[
        PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQN7/PyVj7w5ag/hXbC/3VQSEC5xDMp/YL+uUuzx
hDdnofwX9hNiJuz9tOw4lP/B/v7fWz+yNvRB+V/sl2+erS/v2gbl/7Cf+3il
w3eD9VD+H/vHxZ/1hD/PhPIZHJhdpLgznDdA+UwO/UFnQ7tnw+xncfhbdFnC
xxdmH5tDw1S3DTW3DkL5HA4vq52+2K/YCOVzOZg4bkiZfyl2P4TP43CtLv3g
8v5OKJ/PgU95/eaqc+ugfAEHxhrR5QWdR6B8QYfn/2sNNy3dCOULOayfni/v
dHEH1Hxhh0r9k5P3ndoN5Ys4lLNM/Ps0Y6c9AClpZtA=
        "]], 
       Hue[0.9060679774997897, 0.6, 0.6], 
       Directive[
        PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        RGBColor[0.560181, 0.691569, 0.194885]], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR1csNc8PaFM2aJvP4T/wP5f7k+W5LA6ewj/hb2x
7EXWfyoHofwP9n6NTLoep3dA+V/shb9/s7Z7vASq/4f9tumnjQpDV0L5f+zV
C7tX/incAOUzOKiKaP5vP30Iymdy8Ml7/mFxwR4on8UhOsO495pyBpTP5hDB
cEc47fJaqH0cDvVTF04+xLYLyudyiI1fUVu9eDOUz+PAw826p0NqDZTP5xAa
UrEnPBwmL+AQsfLztSvHYP4VdJBm2iI2S+A4lC/kcO3w3LraHwegfGEH6eCa
MycV5kH5Ig6q+9YVXfveYw8AkClesg==
        "]]}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        LineBox[CompressedData["
1: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
v/P7qhS3/eTH4f9ILBa9
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        LineBox[CompressedData["
1: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
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {-0.1801941500525722, 0.23378192032118988`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox[
       "\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(b\\), \\(j\\)]\\)(t) \
\\!\\(\\*SubsuperscriptBox[\\(b\\), \\(i\\), \
\\(\[Dagger]\\)]\\)(0)\\!\\(\\*SubscriptBox[\\(\[RightAngleBracket]\\), \\(\
\[Beta]\\)]\\)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"Bose-Hubbard model with\\n\\!\\(\\*SubscriptBox[\\(t\\), \\(H\
\\)]\\)=1, U=5, \[Mu]=1/7, M=2, L=5, \[Beta]=0.6\\nsites: i=1, j=3\\nred: \
independent reference calculation\"", TraditionalForm], 
     PlotRange -> {{0, 5.}, {-0.1801941500525722, 0.23378192032118988`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Re\"", "\"Im\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.7], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Virtual bond dimensions", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["t", "plot"], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "4", ",", "5"}], 
    "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"virtual", " ", "bond", " ", "dimension", " ", 
    RowBox[{"for", " ", "'"}], 
    RowBox[{"A", "'"}], " ", "operator"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["fn", "import"], "<>", "\"\<_DXA.dat\>\""}], ",", 
       "\"\<Integer64\>\""}], "]"}], ",", 
     RowBox[{
      SubscriptBox["L", "val"], "+", "1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"%", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
      "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          SubscriptBox["t", "list"], ",", "#"}], "]"}], "&"}], "/@", 
       SubscriptBox["t", "plot"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            SubscriptBox["L", "val"]}], "]"}], ",", "#"}], "}"}], "]"}], 
       "&"}], "/@", "%"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<j\>\"", ",", "\"\<\!\(\*SubscriptBox[\(D\), \(A, j\)]\)(t)\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
      "\"\<virtual bond dimension of \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[ImaginaryI]\\\ H\\\ t/2\)]\) \!\
\(\*SubsuperscriptBox[\(b\), \(i\), \(\[Dagger]\)]\) \!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\(-\[Beta]\)\\\ H/2\)]\) \!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\(-\[ImaginaryI]\)\\\ H\\\ t/2\)]\)\\n\>\"", "<>", 
       SubscriptBox["plot", "label"]}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", "Blue", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<t=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"InputForm", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
        SubscriptBox["t", "plot"]}], ")"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["fn", "export"], "<>", "\"\<DA_L\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["L", "val"], "]"}], "<>", "\"\<_M\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["M", "val"], "]"}], "<>", "\"\<.pdf\>\""}], ",", "%"}], 
     "]"}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "22", ",", "22", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "29", ",", "28", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "38", ",", "36", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "54", ",", "44", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "64", ",", "61", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "72", ",", "73", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "78", ",", "80", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], 
    "}"}]}], "}"}]], "Output"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 
          NCache[
           Rational[2, 3], 0.6666666666666666], 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 22.}, {3., 22.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 38.}, {3., 36.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 64.}, {3., 61.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[2, 3], 0.6666666666666666]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 81.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"j\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(A, j\\)]\\)(t)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"virtual bond dimension of \\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(\[ImaginaryI]\\\\ H\\\\ t/2\\)]\\) \
\\!\\(\\*SubsuperscriptBox[\\(b\\), \\(i\\), \\(\[Dagger]\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\(-\[Beta]\\)\\\\ \
H/2\\)]\\) \\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \
\\(\\(-\[ImaginaryI]\\)\\\\ H\\\\ t/2\\)]\\)\\nBose-Hubbard model \
with\\n\\!\\(\\*SubscriptBox[\\(t\\), \\(H\\)]\\)=1, U=5, \[Mu]=1/7, M=2, \
L=5, \[Beta]=0.6\\nsites: i=1, j=3\"", TraditionalForm], 
     PlotRange -> {{0, 5.}, {0, 81.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"t=0\"", "\"t=1/2\"", "\"t=1\"", "\"t=2\"", "\"t=4\"", "\"t=5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[2/3, 2/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1/3, 1/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 2/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.2222222222222222], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"virtual", " ", "bond", " ", "dimension", " ", 
    RowBox[{"for", " ", "'"}], 
    RowBox[{"B", "'"}], " ", "operator"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["fn", "import"], "<>", "\"\<_DXB.dat\>\""}], ",", 
       "\"\<Integer64\>\""}], "]"}], ",", 
     RowBox[{
      SubscriptBox["L", "val"], "+", "1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"%", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
      "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          SubscriptBox["t", "list"], ",", "#"}], "]"}], "&"}], "/@", 
       SubscriptBox["t", "plot"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            SubscriptBox["L", "val"]}], "]"}], ",", "#"}], "}"}], "]"}], 
       "&"}], "/@", "%"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<j\>\"", ",", "\"\<\!\(\*SubscriptBox[\(D\), \(B, j\)]\)(t)\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
      "\"\<virtual bond dimension of \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-\[ImaginaryI]\)\\\ H\\\ t/2\)]\
\) \!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-\[Beta]\)\\\ H/2\)]\) \
\!\(\*SubscriptBox[\(b\), \(j\)]\) \!\(\*SuperscriptBox[\(\[ExponentialE]\), \
\(\[ImaginaryI]\\\ H\\\ t/2\)]\)\\n\>\"", "<>", 
       SubscriptBox["plot", "label"]}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", "Blue", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<t=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"InputForm", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
        SubscriptBox["t", "plot"]}], ")"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["fn", "export"], "<>", "\"\<DB_L\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["L", "val"], "]"}], "<>", "\"\<_M\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["M", "val"], "]"}], "<>", "\"\<.pdf\>\""}], ",", "%"}], 
     "]"}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "22", ",", "22", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "28", ",", "30", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "35", ",", "40", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "42", ",", "55", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "58", ",", "66", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "71", ",", "73", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "79", ",", "78", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "81", ",", "81", ",", "9", ",", "1"}], 
    "}"}]}], "}"}]], "Output"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 
          NCache[
           Rational[2, 3], 0.6666666666666666], 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 22.}, {3., 22.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 35.}, {3., 40.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 58.}, {3., 66.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[2, 3], 0.6666666666666666]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 81.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"j\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(B, j\\)]\\)(t)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"virtual bond dimension of \\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(\\(-\[ImaginaryI]\\)\\\\ H\\\\ t/2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\(-\[Beta]\\)\\\\ \
H/2\\)]\\) \\!\\(\\*SubscriptBox[\\(b\\), \\(j\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryI]\\\\ H\\\\ t/2\
\\)]\\)\\nBose-Hubbard model with\\n\\!\\(\\*SubscriptBox[\\(t\\), \
\\(H\\)]\\)=1, U=5, \[Mu]=1/7, M=2, L=5, \[Beta]=0.6\\nsites: i=1, j=3\"", 
       TraditionalForm], PlotRange -> {{0, 5.}, {0, 81.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"t=0\"", "\"t=1/2\"", "\"t=1\"", "\"t=2\"", "\"t=4\"", "\"t=5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[2/3, 2/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1/3, 1/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 2/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.2222222222222222], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Effective truncation weight", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tolerance", " ", 
    RowBox[{"(", 
     RowBox[{"truncation", " ", "weight"}], ")"}], " ", "for", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      RowBox[{"H", "/", "2"}]}]]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_tol_eff_beta.dat\>\""}], 
        ",", "\"\<Real64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "-", "1"}]}], "]"}], "-", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}]}]], "Input"],

Cell[BoxData["0.`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tolerance", " ", 
    RowBox[{"(", 
     RowBox[{"truncation", " ", "weight"}], ")"}], " ", "for", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "H", " ", 
      RowBox[{"t", "/", "2"}]}]], " ", 
    SubsuperscriptBox["b", "i", "\[Dagger]"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      RowBox[{"H", "/", "2"}]}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", 
      RowBox[{"t", "/", "2"}]}]]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_tol_eff_A.dat\>\""}], ",", 
        "\"\<Real64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "-", "1"}]}], "]"}], "-", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}]}]], "Input"],

Cell[BoxData["0.`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tolerance", " ", 
    RowBox[{"(", 
     RowBox[{"truncation", " ", "weight"}], ")"}], " ", "for", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", 
      RowBox[{"t", "/", "2"}]}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      RowBox[{"H", "/", "2"}]}]], " ", 
    SubscriptBox["b", "j"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "H", " ", 
      RowBox[{"t", "/", "2"}]}]]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_tol_eff_B.dat\>\""}], ",", 
        "\"\<Real64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "-", "1"}]}], "]"}], "-", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}]}]], "Input"],

Cell[BoxData["0.`"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1625, 919},
WindowMargins->{{Automatic, 234}, {74, Automatic}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 48, 0, 63, "Section"],
Cell[631, 24, 822, 18, 163, "Text"],
Cell[1456, 44, 123, 3, 31, "Input"],
Cell[1582, 49, 297, 9, 31, "Input"],
Cell[1882, 60, 524, 15, 52, "Input"],
Cell[2409, 77, 185, 5, 31, "Input"],
Cell[2597, 84, 3410, 91, 167, "Input"],
Cell[CellGroupData[{
Cell[6032, 179, 43, 0, 43, "Subsection"],
Cell[6078, 181, 228, 7, 52, "Input"],
Cell[6309, 190, 214, 7, 52, "Input"],
Cell[6526, 199, 236, 7, 67, "Input"],
Cell[6765, 208, 233, 7, 52, "Input"],
Cell[7001, 217, 285, 9, 52, "Input"],
Cell[7289, 228, 244, 8, 52, "Input"],
Cell[CellGroupData[{
Cell[7558, 240, 249, 7, 52, "Input"],
Cell[7810, 249, 29, 0, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7888, 255, 52, 0, 43, "Subsection"],
Cell[7943, 257, 485, 14, 48, "Input"],
Cell[8431, 273, 829, 24, 48, "Input"],
Cell[9263, 299, 547, 15, 33, "Input"],
Cell[9813, 316, 549, 15, 33, "Input"],
Cell[10365, 333, 543, 15, 33, "Input"],
Cell[10911, 350, 424, 10, 31, "Input"],
Cell[11338, 362, 144, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[11507, 370, 323, 9, 52, "Input"],
Cell[11833, 381, 51, 1, 31, "Output"]
}, Open  ]],
Cell[11899, 385, 189, 6, 52, "Input"],
Cell[12091, 393, 102, 2, 31, "Input"],
Cell[12196, 397, 1473, 44, 55, "Input"],
Cell[CellGroupData[{
Cell[13694, 445, 119, 3, 33, "Input"],
Cell[13816, 450, 51, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13904, 456, 293, 8, 54, "Input"],
Cell[14200, 466, 51, 0, 31, "Output"]
}, Open  ]],
Cell[14266, 469, 1045, 24, 52, "Input"],
Cell[15314, 495, 329, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[15668, 509, 2822, 81, 98, "Input"],
Cell[18493, 592, 60451, 1055, 322, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78993, 1653, 45, 0, 43, "Subsection"],
Cell[79041, 1655, 213, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[79279, 1666, 3182, 85, 137, "Input"],
Cell[82464, 1753, 2259, 65, 72, "Output"],
Cell[84726, 1820, 27796, 593, 340, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112559, 2418, 3162, 85, 137, "Input"],
Cell[115724, 2505, 2259, 65, 72, "Output"],
Cell[117986, 2572, 27774, 592, 339, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145809, 3170, 49, 0, 43, "Subsection"],
Cell[CellGroupData[{
Cell[145883, 3174, 742, 22, 54, "Input"],
Cell[146628, 3198, 30, 0, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146695, 3203, 1063, 30, 54, "Input"],
Cell[147761, 3235, 30, 0, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147828, 3240, 1045, 30, 54, "Input"],
Cell[148876, 3272, 30, 0, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
