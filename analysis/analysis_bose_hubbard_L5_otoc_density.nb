(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    210285,       4526]
NotebookOptionsPosition[    206402,       4391]
NotebookOutlinePosition[    206745,       4406]
CellTagsIndexPosition[    206702,       4403]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bose-Hubbard model simulation", "Section"],

Cell[TextData[{
 "References:\n\tF. Verstraete, V. Murg, J. I. Cirac\n\tMatrix product \
states, projected entangled pair states, and variational renormalization \
group methods for quantum spin systems\n\tAdvances in Physics 57, 143-224 \
(2008) ",
 ButtonBox["DOI",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dx.doi.org/10.1080/14789940801912366"], None},
  ButtonNote->"http://dx.doi.org/10.1080/14789940801912366"],
 "\n\n\tThomas Barthel\n\tPrecise evaluation of thermal response functions by \
optimized density matrix renormalization group schemes\n\tNew Journal of \
Physics 15, 073010 (2013) ",
 ButtonBox["DOI",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://dx.doi.org/10.1088/1367-2630/15/7/073010"], None},
  ButtonNote->"http://dx.doi.org/10.1088/1367-2630/15/7/073010"]
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SparseIdentityMatrix", "[", "d_", "]"}], ":=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SiteCreateOp", "[", "M_", "]"}], ":=", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "M"}], "]"}], "]"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SiteAnnihilOp", "[", "M_", "]"}], ":=", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "M"}], "]"}], "]"}], ",", "1"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NumberOp", "[", "M_", "]"}], ":=", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "M"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"construct", " ", "Bose"}], "-", 
    RowBox[{
    "Hamiltonian", " ", "with", " ", "open", " ", "boundary", " ", 
     "conditions"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HBose", "[", 
     RowBox[{"t_", ",", "U_", ",", "\[Mu]_", ",", "M_", ",", "1"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox["U", "2"], 
      RowBox[{
       RowBox[{"NumberOp", "[", "M", "]"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NumberOp", "[", "M", "]"}], "-", 
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"M", "+", "1"}], "]"}]}], ")"}]}]}], "-", 
     RowBox[{"\[Mu]", " ", 
      RowBox[{"NumberOp", "[", "M", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HBose", "[", 
     RowBox[{"t_", ",", "U_", ",", "\[Mu]_", ",", "M_", ",", "L_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "t"}], " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"j", "-", "1"}]], "]"}], ",", 
           RowBox[{"SiteCreateOp", "[", "M", "]"}], ",", 
           RowBox[{"SiteAnnihilOp", "[", "M", "]"}], ",", 
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}], "+", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"j", "-", "1"}]], "]"}], ",", 
           RowBox[{"SiteAnnihilOp", "[", "M", "]"}], ",", 
           RowBox[{"SiteCreateOp", "[", "M", "]"}], ",", 
           RowBox[{"SparseIdentityMatrix", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}], 
             RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"L", "-", "1"}]}], "}"}]}], "]"}]}], "+", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"SparseIdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"M", "+", "1"}], ")"}], 
           RowBox[{"j", "-", "1"}]], "]"}], ",", 
         RowBox[{
          RowBox[{
           FractionBox["U", "2"], 
           RowBox[{
            RowBox[{"NumberOp", "[", "M", "]"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NumberOp", "[", "M", "]"}], "-", 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"M", "+", "1"}], "]"}]}], ")"}]}]}], "-", 
          RowBox[{"\[Mu]", " ", 
           RowBox[{"NumberOp", "[", "M", "]"}]}]}], ",", 
         RowBox[{"SparseIdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"M", "+", "1"}], ")"}], 
           RowBox[{"L", "-", "j"}]], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "L"}], "}"}]}], "]"}]}]}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["Simulation parameters", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"kinetic", " ", "hopping", " ", "parameter"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["tH", "val"], "=", "1"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"interaction", " ", "strength"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["U", "val"], "=", "5"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"chemical", " ", "potential"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Mu]", "val"], "=", 
    FractionBox["1", "7"]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "lattice", " ", "sites"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "val"], "=", "5"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "single", " ", "site", " ", "occupation", " ", "number", " ", "cut"}], 
    "-", "off"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["M", "val"], "=", "2"}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"inverse", " ", "temperature"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Beta]", "val"], "=", 
    RowBox[{"3", "/", "5"}]}], ";"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["t", "list"], "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "5", ",", 
     RowBox[{"1", "/", "8"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "%", "]"}]}], "Input"],

Cell[BoxData["41"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Out-of-time-order correlations", "Subsection"],

Cell[CellGroupData[{

Cell["Read simulation results from disk", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["fn", "import"], "=", 
   RowBox[{"\"\<../output/bose_hubbard/L\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["L", "val"], "]"}], "<>", 
    "\"\<_otoc_density/bose_hubbard_L\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["L", "val"], "]"}], "<>", "\"\<_M\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["M", "val"], "]"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["density", "list"], "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["fn", "import"], "<>", "\"\<_density.dat\>\""}], ",", 
    "\"\<Real64\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "%", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.621552428983918`", ",", "0.675376679807176`", ",", "0.6760703821058863`",
    ",", "0.675413517135071`", ",", "0.6215847982543072`"}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", "5", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["energy", "val"], "=", 
  RowBox[{"First", "[", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["fn", "import"], "<>", "\"\<_energy.dat\>\""}], ",", 
     "\"\<Real64\>\""}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "1.906812353290824`"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["notoc", "list"], "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["fn", "import"], "<>", "\"\<_n_otoc.dat\>\""}], ",", 
     "\"\<Complex128\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "%", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", "41", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["nncorr", "list"], "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["fn", "import"], "<>", "\"\<_nn_corr.dat\>\""}], ",", 
     "\"\<Complex128\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "%", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", "41", "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reference calculation", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OperatorAverage", "[", 
   RowBox[{"A_", ",", "H_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"exp\[Beta]H", "=", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", "H"}], "]"}]}], "}"}], ",", 
    FractionBox[
     RowBox[{"Tr", "[", 
      RowBox[{"exp\[Beta]H", ".", "A"}], "]"}], 
     RowBox[{"Tr", "[", "exp\[Beta]H", "]"}]]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoOpAverage", "[", 
   RowBox[{"A_", ",", "B_", ",", "H_", ",", "\[Beta]_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"exp\[Beta]H", "=", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", "H"}], "]"}]}], ",", 
      RowBox[{"At", "=", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}], ".", 
        "A", ".", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "H"}], "]"}]}]}]}], "}"}], 
    ",", 
    FractionBox[
     RowBox[{"Tr", "[", 
      RowBox[{"exp\[Beta]H", ".", "At", ".", "B"}], "]"}], 
     RowBox[{"Tr", "[", "exp\[Beta]H", "]"}]]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OTOC", "[", 
   RowBox[{
   "A_", ",", "B_", ",", "C_", ",", "D_", ",", "H_", ",", "\[Beta]_", ",", 
    "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"exp\[Beta]H", "=", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", "H"}], "]"}]}], ",", 
      RowBox[{"At", "=", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}], ".", 
        "A", ".", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "H"}], "]"}]}]}], ",", 
      RowBox[{"Ct", "=", 
       RowBox[{
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "H"}], "]"}], ".", 
        "C", ".", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "H"}], "]"}]}]}]}], "}"}], 
    ",", 
    FractionBox[
     RowBox[{"Tr", "[", 
      RowBox[{"exp\[Beta]H", ".", "At", ".", "B", ".", "Ct", ".", "D"}], 
      "]"}], 
     RowBox[{"Tr", "[", "exp\[Beta]H", "]"}]]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SiteNumberOpFull", "[", 
   RowBox[{"j_", ",", "M_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], "j"], "]"}], ",", 
    RowBox[{"NumberOp", "[", "M", "]"}], ",", 
    RowBox[{"SparseIdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}], 
      RowBox[{"L", "-", "j", "-", "1"}]], "]"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"tH", "=", 
      SubscriptBox["tH", "val"]}], ",", 
     RowBox[{"U", "=", 
      SubscriptBox["U", "val"]}], ",", 
     RowBox[{"\[Mu]", "=", 
      SubscriptBox["\[Mu]", "val"]}], ",", 
     RowBox[{"M", "=", 
      SubscriptBox["M", "val"]}], ",", 
     RowBox[{"L", "=", 
      SubscriptBox["L", "val"]}], ",", 
     RowBox[{"\[Beta]", "=", 
      SubscriptBox["\[Beta]", "val"]}], ",", "HB"}], "}"}], ",", 
   RowBox[{
    RowBox[{"HB", "=", 
     RowBox[{"N", "[", 
      RowBox[{"HBose", "[", 
       RowBox[{"tH", ",", "U", ",", "\[Mu]", ",", "M", ",", "L"}], "]"}], 
      "]"}]}], ";", 
    RowBox[{
     SubscriptBox["density", 
      RowBox[{"list", ",", "ref"}]], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"OperatorAverage", "[", 
        RowBox[{
         RowBox[{"SiteNumberOpFull", "[", 
          RowBox[{"i", ",", "M", ",", "L"}], "]"}], ",", "HB", ",", 
         "\[Beta]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"L", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6215533386197526`", ",", "0.6753618526848063`", ",", 
   "0.6760214033886217`", ",", "0.6753618526848069`", ",", 
   "0.6215533386197531`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"tH", "=", 
      SubscriptBox["tH", "val"]}], ",", 
     RowBox[{"U", "=", 
      SubscriptBox["U", "val"]}], ",", 
     RowBox[{"\[Mu]", "=", 
      SubscriptBox["\[Mu]", "val"]}], ",", 
     RowBox[{"M", "=", 
      SubscriptBox["M", "val"]}], ",", 
     RowBox[{"L", "=", 
      SubscriptBox["L", "val"]}], ",", 
     RowBox[{"\[Beta]", "=", 
      SubscriptBox["\[Beta]", "val"]}], ",", "HB"}], "}"}], ",", 
   RowBox[{
    RowBox[{"HB", "=", 
     RowBox[{"N", "[", 
      RowBox[{"HBose", "[", 
       RowBox[{"tH", ",", "U", ",", "\[Mu]", ",", "M", ",", "L"}], "]"}], 
      "]"}]}], ";", 
    RowBox[{
     SubscriptBox["energy", 
      RowBox[{"val", ",", "ref"}]], "=", 
     RowBox[{"OperatorAverage", "[", 
      RowBox[{"HB", ",", "HB", ",", "\[Beta]"}], "]"}]}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "1.9068984524733663`"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["i", "site"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["j", "site"], "=", "3"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tH", "=", 
       SubscriptBox["tH", "val"]}], ",", 
      RowBox[{"U", "=", 
       SubscriptBox["U", "val"]}], ",", 
      RowBox[{"\[Mu]", "=", 
       SubscriptBox["\[Mu]", "val"]}], ",", 
      RowBox[{"M", "=", 
       SubscriptBox["M", "val"]}], ",", 
      RowBox[{"L", "=", 
       SubscriptBox["L", "val"]}], ",", 
      RowBox[{"\[Beta]", "=", 
       SubscriptBox["\[Beta]", "val"]}], ",", "HB"}], "}"}], ",", 
    RowBox[{
     RowBox[{"HB", "=", 
      RowBox[{"N", "[", 
       RowBox[{"HBose", "[", 
        RowBox[{"tH", ",", "U", ",", "\[Mu]", ",", "M", ",", "L"}], "]"}], 
       "]"}]}], ";", 
     RowBox[{
      SubscriptBox["notoc", 
       RowBox[{"list", ",", "ref"}]], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"OTOC", "[", 
         RowBox[{
          RowBox[{"SiteNumberOpFull", "[", 
           RowBox[{
            SubscriptBox["j", "site"], ",", "M", ",", "L"}], "]"}], ",", 
          RowBox[{"SiteNumberOpFull", "[", 
           RowBox[{
            SubscriptBox["i", "site"], ",", "M", ",", "L"}], "]"}], ",", 
          RowBox[{"SiteNumberOpFull", "[", 
           RowBox[{
            SubscriptBox["j", "site"], ",", "M", ",", "L"}], "]"}], ",", 
          RowBox[{"SiteNumberOpFull", "[", 
           RowBox[{
            SubscriptBox["i", "site"], ",", "M", ",", "L"}], "]"}], ",", "HB",
           ",", "\[Beta]", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          SubscriptBox["t", "list"]}], "}"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tH", "=", 
       SubscriptBox["tH", "val"]}], ",", 
      RowBox[{"U", "=", 
       SubscriptBox["U", "val"]}], ",", 
      RowBox[{"\[Mu]", "=", 
       SubscriptBox["\[Mu]", "val"]}], ",", 
      RowBox[{"M", "=", 
       SubscriptBox["M", "val"]}], ",", 
      RowBox[{"L", "=", 
       SubscriptBox["L", "val"]}], ",", 
      RowBox[{"\[Beta]", "=", 
       SubscriptBox["\[Beta]", "val"]}], ",", "HB"}], "}"}], ",", 
    RowBox[{
     RowBox[{"HB", "=", 
      RowBox[{"N", "[", 
       RowBox[{"HBose", "[", 
        RowBox[{"tH", ",", "U", ",", "\[Mu]", ",", "M", ",", "L"}], "]"}], 
       "]"}]}], ";", 
     RowBox[{
      SubscriptBox["nncorr", 
       RowBox[{"list", ",", "ref"}]], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TwoOpAverage", "[", 
         RowBox[{
          RowBox[{"SiteNumberOpFull", "[", 
           RowBox[{
            SubscriptBox["j", "site"], ",", "M", ",", "L"}], "]"}], ",", 
          RowBox[{"SiteNumberOpFull", "[", 
           RowBox[{
            SubscriptBox["i", "site"], ",", "M", ",", "L"}], "]"}], ",", "HB",
           ",", "\[Beta]", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          SubscriptBox["t", "list"]}], "}"}]}], "]"}]}]}]}], "]"}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare with reference", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   SubscriptBox["density", "list"], "-", 
   SubscriptBox["density", 
    RowBox[{"list", ",", "ref"}]]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.096358345450639`*^-7", ",", "0.000014827122369664991`", ",", 
   "0.00004897871726461389`", ",", "0.000051664450264166106`", ",", 
   "0.0000314596345540874`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   SubscriptBox["energy", "val"], "-", 
   SubscriptBox["energy", 
    RowBox[{"val", ",", "ref"}]]}], "]"}]], "Input"],

Cell[BoxData["0.00008609918254220972`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["notoc", "list"], "-", 
    SubscriptBox["notoc", 
     RowBox[{"list", ",", "ref"}]]}], ",", "\[Infinity]"}], "]"}]], "Input"],

Cell[BoxData["0.00015073738759791426`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["nncorr", "list"], "-", 
    SubscriptBox["nncorr", 
     RowBox[{"list", ",", "ref"}]]}], ",", "\[Infinity]"}], "]"}]], "Input"],

Cell[BoxData["0.00007398548791756254`"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize simulation results", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["plot", "label"], "=", 
   RowBox[{
   "\"\<Bose-Hubbard model with\\n\!\(\*SubscriptBox[\(t\), \(H\)]\)=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["tH", "val"], "]"}], "<>", "\"\<, U=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["U", "val"], "]"}], "<>", "\"\<, \[Mu]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"InputForm", "[", 
      SubscriptBox["\[Mu]", "val"], "]"}], "]"}], "<>", "\"\<, M=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["M", "val"], "]"}], "<>", "\"\<, L=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["L", "val"], "]"}], "<>", "\"\<, \[Beta]=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"N", "[", 
      SubscriptBox["\[Beta]", "val"], "]"}], "]"}], "<>", 
    "\"\<\\nsites: i=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["i", "site"], "]"}], "<>", "\"\<, j=\>\"", "<>", 
    RowBox[{"ToString", "[", 
     SubscriptBox["j", "site"], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["fn", "export"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\"\<plots/\>\"", "<>", "#", "<>", "\"\</\>\"", "<>", "#", "<>", 
      "\"\<_\>\""}], "&"}], "[", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["t", "list"], ",", 
          RowBox[{"Re", "[", 
           SubscriptBox["notoc", "list"], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["t", "list"], ",", 
          RowBox[{"Im", "[", 
           SubscriptBox["notoc", "list"], "]"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t\>\"", ",", 
        "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(n\), \(j\)]\)(t) \
\!\(\*SubscriptBox[\(n\), \(i\)]\)(0) \!\(\*SubscriptBox[\(n\), \(j\)]\)(t) \
\!\(\*SubscriptBox[\(n\), \
\(i\)]\)(0)\!\(\*SubscriptBox[\(\[RightAngleBracket]\), \(\[Beta]\)]\)\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       SubscriptBox["plot", "label"], "<>", 
       "\"\<\\nred: independent reference calculation\>\""}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["t", "list"], ",", 
            RowBox[{"Re", "[", 
             SubscriptBox["notoc", 
              RowBox[{"list", ",", "ref"}]], "]"}]}], "}"}], "]"}], "]"}], 
        "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["t", "list"], ",", 
            RowBox[{"Im", "[", 
             SubscriptBox["notoc", 
              RowBox[{"list", ",", "ref"}]], "]"}]}], "}"}], "]"}], "]"}], 
        "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["fn", "export"], "<>", "\"\<n_otoc_L\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SubscriptBox["L", "val"], "]"}], "<>", "\"\<.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {
       Hue[0.67, 0.6, 0.6], 
       Directive[
        PointSize[0.016666666666666666`], 
        AbsoluteThickness[1.6], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQNvszRPbNzzxB7CO2DfV5F4bcEyGP+C/cVXr/48
XAjj37DvXDTtQrnsUyj/gf2HnqYQB5NnUP4TezleLYMfhc+h/Bf2VaICUxaL
v4Dy39jrf/gS+G4XTP6D/ZQQRvu522D6P9lvnKvQ/+85zPwv9h+4bDZ4foDx
v9mfrnOfL74Bpv6HvfD/XYF+xTDzftl3rWVccHcRjP/H3jnxd3ScF4z/z/6q
xCz/TU9g+hkcQiI9/Sp3wPiMDktDDjx40A7jMzncenykwvIFzH5mh1Sb1ost
F2HhweIg93/TA9l9j6F8Voc4Dp7IPa4wPpuDZuhbhRVrYXx2B6t9E1bFX4Pp
53B4Pkf+rFw9zD5OB6+bWhOXVMDCi8thp9b1O/faXkH53A7vPbcLvtR5A+Xz
OGidf2ztvRfG53XQ+pL65cqZ11A+n4OfTsnzoB0voXx+h4rEGY86e2DhIeBQ
9HzC4hw9qP0NAg42FZ6nTq6G+VfQwdhQfmdBMZTfIOiQHsvUsZ8LJi/koKza
kpmfCfVPg5DD/tiFm8rOw/wr7PCa8+3xZ7VQfoOwQ+X+DOUtc2DyIg4clQdM
n7s8sQcA4GLMgw==
        "]], 
       Hue[0.9060679774997897, 0.6, 0.6], 
       Directive[
        PointSize[0.016666666666666666`], 
        AbsoluteThickness[1.6], 
        RGBColor[0.560181, 0.691569, 0.194885]], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjR0csM+7qFlity14P4R/wZ7lzv19Vf71UP4N+06+
LW36byZC+Q/sm80ym0Rqp0P5T+xz2kNOZKvB5F/YR4kafbeYamgP4b+xL9pe
m39l9UQo/4N97/vv8uKB06D8T/aLDgZFzFLpgPK/2F+65vPgSkoK1Lxv9o5S
r+L6mxug/B/25VESZcHiYVD+L/t/V4XV/0k1QfX/sbdTyva0PtMO5f+zD+Vs
Mdr+vwrKZ3DYPvEnB+eEPCif0eFDGq915O42KJ/JYVPaJNNu75lQPrPDszeT
Y5aELYDyWRx8N9nIXU6fAeWzOjQ/uMht+iEFymdzeBEh1RjNCAsfdoeVhr9Z
g9mXQfkcDgXrlXnZzq2B8jkdHq/NOP/WdD2Uz+WgXibVsSF1NZTP7fB9A0/B
1MfzoHweB7dLm/883VcJtY/XYU5qiNWZ8qVQPp/D5edVPzrfr4Xy+R2CH60t
ujZzJZQv4KBVbVyjlDMPwm8QcDC7+USm7WA/VF7QYZLgq4lyEV1QeUGHT28n
n+Fx7oPKCznY7H7Jwnu2Gyov5HDr/tJj8zTqofLCDgYafAEcOaEQ9zYIOyQL
nedp3tEBdb+IA5vapV2vEmbuBwBaQrlA
        "]]}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        LineBox[CompressedData["
1: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
ukdt27gRl9u4tgl+Pw2ZBU1VWW70ifNNYy52S8dQZ/xObpQ3ELZdCMfHJar3
+qQCNxr6lXUwCHttX+sma2Vu9KXIetsidtLo+6oyNW50R/NP9U0c72br7OWr
OtwoPyNR9Cnej5dhA90putzIL66naJ8pBZLfbKusA250Im++pBvbbXPmNaIh
Nwq3dvinivfbyrzfWsuEGy0NLvENYe8N2qJmb8aNGotIsQXmFOCjpI4WWnGj
srfWDw7hfBoX7f36w4YbzfJ9E9qC8+234ebChZPcqCfywq817PyCxxeMznKj
don7Gr3/z88rj/4OuHOjmLf7vs0dp4BKzq8aPk9uRCkS0ibj/BfrEE1TucKN
vDv1WjRxfTB0HtjevI7X3+t1+dEpXI/s935sCuNGB+uPbnrjQAEP9W/PUSQ3
OpqW6kd2osDx80JxF2K4kXzFHYbvOdwPmu4cLo/nRhFvVntPulDg072oest0
bsRaTKzzv4Tzv64xy/cJNzrGFiCz0YMCD6fXBafncCMJS6Nrbz0p4HwyfD+r
gBuRfu5v3/wfBbikQl9HvOFGqbeJEvv8cb6XBubXtHGjC+HvfMajKCD/7204
7Sc3cn+push3hwIk8pKzQCeOj85GZYW7FBjw8dtm18eNRs7+Trt9nwLBB3yS
Zwa5kYPsE+kHKRSobfG8o8jJgzYwVom7S3F+iCJCIg8PyprfdIb/JY6nHTGa
nZ8H/e7hdRh/RYE4xvOIDiIPEmojO3Xg/mvPPhlyawsPUr5Rpcv3mQLLGlf9
2nV4UN1xhQB23N91Uq+7BHrxoGm39Acz+HtSNGBMo//Hg/ZrmGh0bKGC1K5N
zkd9eVBMgo1JzXYq8L6udNxxkwdxdB3Kz5Gnwu9vi6fbYnjQgJft1qa9+HvJ
ecNaJo8H0Sz3bbt4mgov3YLR1z4e1LqHNvQmhwoaTg6NO/7xIPcrs85nnlHh
tS1YBlN5ULxQfSdvCRUqjVfOag7zoKPzXsHeb6hQu8MvKHOeB1UnbOqObKZC
y4BXzVXyOqRjs04sboIKTDsHXUmTdcjlkpLFDX0abDkM2h6v1qEry5vKuWdp
MPrBfeXum3XI/X6E4s0lGrzXTqorrVqHeIz+7V9ko4PDjgmzidp1qPl09cYV
Ah2y2LMdr7asQ3s9G/l2b6eDXAVPjD99Hdr/a2Ja5QgdVGRb+8LFeJF5hZXH
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
Ww==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        LineBox[CompressedData["
1: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
XH//egoTdd5HbfcPg2XFs2krRwqfOQT7zXsbAmvnHU5o2svev28jGZIZAtY+
eenu+ygMtLbfnnEqBAJVbErCDlJouimkbKlaCFRFRE0WHaGQktsdJulzFryt
ZTxX+FF41vSOXtrUaShsF7HlCCisePpjfVLjSdg2o29hXRGFOc1H9ak3HpDR
HTJ5pphCj8IppfjmYyBWpdio84zC+e89bhh1ukNBjGVC9HMKd+23Guv94QZL
lG9R1lUUbvU3PPKn6GEYMXKXqv1AYUi+7POF3/fAZa/ugVfDFLqGndmZG2Ei
HGj8XFKpzkXL5bauPHNfoeclAfdcJBd3lD/iXr/HE1aJqny3iOZi90K5njop
vlD9SOEL2VguLhpqcNXfxxd+1uk6ExXPxV1RUsF8GYHQvhwHLiRzMaYlb26M
GyPcMDhUlX6Li59Ez9lMxUUJ55g7hJWWc3FK0c8TPGKFvncGDoZVcvFsfod7
YFKssJYKNzF/ycWnnvzy6opYIa85d/hlNRd9xpfll6ieF4r4yh2qf8PFnNi+
jpbW88Le5GJo7+BiyiCzt8UxXrhZfLdiaicXG06ZB93jxQtT3fpHDndx8cy8
wo2XH8UL9+vNz+rp5aLNqsONpYoXhA0Vvgt+/OBi80rDm5uaLwh1tP8Yyxni
ooctOdsllyBkYlPq/X5y0e53q+q1dQnCLfte0WNjXMSrkq0uKQnC9JJDroXj
XFQK0Jz2eJ0glFg+vj5okovO0T3jjFii8CATtXDdby7WNqa9e6GXKCwaUvs1
Pc3F4E2VicqHE4X/B+nJH1c=
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {-0.06095832020613636, 0.8981071634029594}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox[
       "\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(n\\), \\(j\\)]\\)(t) \
\\!\\(\\*SubscriptBox[\\(n\\), \\(i\\)]\\)(0) \\!\\(\\*SubscriptBox[\\(n\\), \
\\(j\\)]\\)(t) \\!\\(\\*SubscriptBox[\\(n\\), \
\\(i\\)]\\)(0)\\!\\(\\*SubscriptBox[\\(\[RightAngleBracket]\\), \
\\(\[Beta]\\)]\\)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"Bose-Hubbard model with\\n\\!\\(\\*SubscriptBox[\\(t\\), \\(H\
\\)]\\)=1, U=5, \[Mu]=1/7, M=2, L=5, \[Beta]=0.6\\nsites: i=1, j=3\\nred: \
independent reference calculation\"", TraditionalForm], 
     PlotRange -> {{0, 5.}, {-0.06095832020613636, 0.8981071634029594}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Re\"", "\"Im\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["t", "list"], ",", 
          RowBox[{"Re", "[", 
           SubscriptBox["nncorr", "list"], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["t", "list"], ",", 
          RowBox[{"Im", "[", 
           SubscriptBox["nncorr", "list"], "]"}]}], "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t\>\"", ",", 
        "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(n\), \(j\)]\)(t) \
\!\(\*SubscriptBox[\(n\), \
\(i\)]\)(0)\!\(\*SubscriptBox[\(\[RightAngleBracket]\), \(\[Beta]\)]\)\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       SubscriptBox["plot", "label"], "<>", 
       "\"\<\\nred: independent reference calculation\>\""}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Re\>\"", ",", "\"\<Im\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["t", "list"], ",", 
            RowBox[{"Re", "[", 
             SubscriptBox["nncorr", 
              RowBox[{"list", ",", "ref"}]], "]"}]}], "}"}], "]"}], "]"}], 
        "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        RowBox[{"Interpolation", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["t", "list"], ",", 
            RowBox[{"Im", "[", 
             SubscriptBox["nncorr", 
              RowBox[{"list", ",", "ref"}]], "]"}]}], "}"}], "]"}], "]"}], 
        "[", "\[Tau]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{
       RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["fn", "export"], "<>", "\"\<nn_corr_L\>\"", "<>", 
     RowBox[{"ToString", "[", 
      SubscriptBox["L", "val"], "]"}], "<>", "\"\<.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {
       Hue[0.67, 0.6, 0.6], 
       Directive[
        PointSize[0.016666666666666666`], 
        AbsoluteThickness[1.6], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQPChqesvRXv2kN4B+yPsf51u80N41+w35jkUcz1
5Q6Uf8N+qaQsb6smTP6B/fTjTCw/zsP4T+x3Hm31N99yD8p/YR/GzhfUV3Qf
yn9j/+g1173rp2H8D/b671rbDtyG8T/ZH7HrELP/C+N/sZd225T11uoBlP/N
XqTu7grtmTD+D/vs3cFfm1/A+L/sp2f+jvj4Dcb/Y+8XJ9y6YyuM/89erV/Z
74wdjM/g0KJce9axEmYfo4Np//zEdXNh7mdyKJq19EcbC4zP7OD7KWMZ83aY
f1kc8k0k7m4/BuOzOjznmuY4JQCmns0hb2Oy44tsmPnsDktO/C9a0g2zn8Nh
+v3AhoIZD6F8ToczK3a1ztvzCMrncris6n0k98xjKJ/bYfnBN0z/pjyB8nkc
Lsgyvmd5CePzOoRfbeV/sQXG53Owdz4ln8QD4/M7eE0WOvRLEWaegMOJjkil
K1pQ+xoEHDoP20yd7Qpzj6DDhsop7kqVUPc2CDqkqlvOyuqD+UfIYYJiiylz
NdS/DUIOnlvEnY+8gIWHsIPd4zsXFzLA5IUduF4Iq64/DQsfEQcPi5d5XhIP
7AGtScMv
        "]], 
       Hue[0.9060679774997897, 0.6, 0.6], 
       Directive[
        PointSize[0.016666666666666666`], 
        AbsoluteThickness[1.6], 
        RGBColor[0.560181, 0.691569, 0.194885]], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjR0csN9+z1c//7b3fgj/gv2GuEWzD/mXQ/k37MWj
vdqO/++B8h/Yz8vW5VPjngblP7G/u3C3mk3PdCj/hb2wS45M6fJJUP4b++lr
eipv6ndA+R/srx2sn1wm0Azlf7LXUi95pPAMJv/F/kMH2wyO9ROg/G/2/YK/
5nZ+6Ifyf9gf2Hjr1iSdWij/l72r8KY5v2dU2UP4f+yNctr5FXZOhvL/2Utb
+t7QvDcLymdwuGow+0nDWRif0SH1hDZLqslUKJ/JYbr09E5Rkw4on9nh6vbO
Q22rDaF8FofL2vpKsVNh4cHqoKIkLbaKZT6Uz+YQ/2lWBdOn5VA+u8Mdu5VP
xR+vg/I5HC72TDXbGbIRyud0YK4pCPnzcQOUz+VwYGF647Wzq6F8bofJ7Mse
vt20AMrncbjk/XUNq3UxlM/r8HruiTsuZ6dD3cfnsGWtSYrdu2VQPr8D71Sr
lXLv1kD5Ag7KBY5bNAPWQfgNAg4JQe/W/dgEkxd0mGCced3feyVUXtBhW+iR
t1aqS6DyQg6rCgv4uLpmQuWFHFgVpKsLRGDhL+xwI6F09XXBXoj7GoQd3tSe
nrNOYiHUvSIO2mdSO1b3rtgPAPfnv1Q=
        "]]}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        LineBox[CompressedData["
1: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
bG1xo1kzS0VqaBb+H5qNe6U=
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {-0.0676990278494032, 0.6534447353414468}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox[
       "\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(n\\), \\(j\\)]\\)(t) \
\\!\\(\\*SubscriptBox[\\(n\\), \\(i\\)]\\)(0)\\!\\(\\*SubscriptBox[\\(\
\[RightAngleBracket]\\), \\(\[Beta]\\)]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"Bose-Hubbard model with\\n\\!\\(\\*SubscriptBox[\\(t\\), \\(H\
\\)]\\)=1, U=5, \[Mu]=1/7, M=2, L=5, \[Beta]=0.6\\nsites: i=1, j=3\\nred: \
independent reference calculation\"", TraditionalForm], 
     PlotRange -> {{0, 5.}, {-0.0676990278494032, 0.6534447353414468}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Re\"", "\"Im\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Virtual bond dimensions", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["t", "plot"], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "4", ",", "5"}], 
    "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"virtual", " ", "bond", " ", "dimension", " ", 
    RowBox[{"for", " ", "'"}], 
    RowBox[{"A", "'"}], " ", "operator"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_DXA.dat\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "+", "1"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"%", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
      "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          SubscriptBox["t", "list"], ",", "#"}], "]"}], "&"}], "/@", 
       SubscriptBox["t", "plot"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            SubscriptBox["L", "val"]}], "]"}], ",", "#"}], "}"}], "]"}], 
       "&"}], "/@", "%"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<j\>\"", ",", "\"\<\!\(\*SubscriptBox[\(D\), \(A, j\)]\)(t)\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
      "\"\<virtual bond dimension of \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-\[ImaginaryI]\)\\\ H\\\ t\)]\) \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-\[Beta]\)\\\ H\)]\) \
\!\(\*SubsuperscriptBox[\(b\), \(j\), \(\[Dagger]\)]\) \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\[ImaginaryI]\\\ H\\\ t\)]\)\\n\>\
\"", "<>", 
       SubscriptBox["plot", "label"]}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", "Blue", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<t=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"InputForm", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
        SubscriptBox["t", "plot"]}], ")"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["fn", "export"], "<>", "\"\<DA_L\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["L", "val"], "]"}], "<>", "\"\<_M\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["M", "val"], "]"}], "<>", "\"\<.pdf\>\""}], ",", "%"}], 
     "]"}], ";"}]}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 
          NCache[
           Rational[2, 3], 0.6666666666666666], 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 30.}, {3., 30.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 61.}, {3., 67.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[2, 3], 0.6666666666666666]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 81.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"j\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(A, j\\)]\\)(t)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"virtual bond dimension of \\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(\\(-\[ImaginaryI]\\)\\\\ H\\\\ t\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\(-\[Beta]\\)\\\\ H\\)]\\) \
\\!\\(\\*SubsuperscriptBox[\\(b\\), \\(j\\), \\(\[Dagger]\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\[ImaginaryI]\\\\ H\\\\ \
t\\)]\\)\\nBose-Hubbard model with\\n\\!\\(\\*SubscriptBox[\\(t\\), \
\\(H\\)]\\)=1, U=5, \[Mu]=1/7, M=2, L=5, \[Beta]=0.6\\nsites: i=1, j=3\"", 
       TraditionalForm], PlotRange -> {{0, 5.}, {0, 81.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"t=0\"", "\"t=1/2\"", "\"t=1\"", "\"t=2\"", "\"t=4\"", "\"t=5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[2/3, 2/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1/3, 1/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 2/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.2222222222222222], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"virtual", " ", "bond", " ", "dimension", " ", 
    RowBox[{"for", " ", "'"}], 
    RowBox[{"B", "'"}], " ", "operator"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_DXB.dat\>\""}], ",", 
        "\"\<Integer64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "+", "1"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"%", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
      "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          SubscriptBox["t", "list"], ",", "#"}], "]"}], "&"}], "/@", 
       SubscriptBox["t", "plot"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            SubscriptBox["L", "val"]}], "]"}], ",", "#"}], "}"}], "]"}], 
       "&"}], "/@", "%"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<j\>\"", ",", "\"\<\!\(\*SubscriptBox[\(D\), \(B, j\)]\)(t)\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
      "\"\<virtual bond dimension of \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-\[ImaginaryI]\)\\\ H\\\ t\)]\) \
\!\(\*SubscriptBox[\(b\), \(j\)]\) \!\(\*SuperscriptBox[\(\[ExponentialE]\), \
\(\[ImaginaryI]\\\ H\\\ t\)]\)\\n\>\"", "<>", 
       SubscriptBox["plot", "label"]}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Lighter", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", "Blue", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"1", "/", "3"}]}], "]"}], ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"2", "/", "3"}]}], "]"}], ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<t=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"InputForm", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
        SubscriptBox["t", "plot"]}], ")"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["fn", "export"], "<>", "\"\<DB_L\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["L", "val"], "]"}], "<>", "\"\<_M\>\"", "<>", 
       RowBox[{"ToString", "[", 
        SubscriptBox["M", "val"], "]"}], "<>", "\"\<.pdf\>\""}], ",", "%"}], 
     "]"}], ";"}]}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 
          NCache[
           Rational[2, 3], 0.6666666666666666], 1]], 
        LineBox[{{0., 1.}, {1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 
         1.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 62.}, {3., 73.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[2, 3], 0.6666666666666666]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[{{0., 1.}, {1., 9.}, {2., 81.}, {3., 81.}, {4., 9.}, {5., 
         1.}}]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 5.}, {0, 81.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"j\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(B, j\\)]\\)(t)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox["\"virtual bond dimension of \\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(\\(-\[ImaginaryI]\\)\\\\ H\\\\ t\\)]\\) \
\\!\\(\\*SubscriptBox[\\(b\\), \\(j\\)]\\) \\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(\[ImaginaryI]\\\\ H\\\\ t\\)]\\)\\nBose-Hubbard model \
with\\n\\!\\(\\*SubscriptBox[\\(t\\), \\(H\\)]\\)=1, U=5, \[Mu]=1/7, M=2, \
L=5, \[Beta]=0.6\\nsites: i=1, j=3\"", TraditionalForm], 
     PlotRange -> {{0, 5.}, {0, 81.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"t=0\"", "\"t=1/2\"", "\"t=1\"", "\"t=2\"", "\"t=4\"", "\"t=5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[2/3, 2/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 
                    Rational[2, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1/3, 1/3, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 2/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.2222222222222222], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1/3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Effective truncation weight", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tolerance", " ", 
    RowBox[{"(", 
     RowBox[{"truncation", " ", "weight"}], ")"}], " ", "for", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", "H"}]]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_tol_eff_beta.dat\>\""}], 
        ",", "\"\<Real64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "-", "1"}]}], "]"}], "-", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}]}]], "Input"],

Cell[BoxData["0.`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tolerance", " ", 
    RowBox[{"(", 
     RowBox[{"truncation", " ", "weight"}], ")"}], " ", "for", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", "t"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", "H"}]], " ", 
    SubsuperscriptBox["b", "j", "\[Dagger]"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "H", " ", "t"}]]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_tol_eff_A.dat\>\""}], ",", 
        "\"\<Real64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "-", "1"}]}], "]"}], "-", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}]}]], "Input"],

Cell[BoxData["0.`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"tolerance", " ", 
    RowBox[{"(", 
     RowBox[{"truncation", " ", "weight"}], ")"}], " ", "for", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", "t"}]], " ", 
    SubscriptBox["b", "j"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "H", " ", "t"}]]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["fn", "import"], "<>", "\"\<_tol_eff_B.dat\>\""}], ",", 
        "\"\<Real64\>\""}], "]"}], ",", 
      RowBox[{
       SubscriptBox["L", "val"], "-", "1"}]}], "]"}], "-", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}]}]], "Input"],

Cell[BoxData["0.`"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1626, 919},
WindowMargins->{{Automatic, 233}, {74, Automatic}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 48, 0, 63, "Section"],
Cell[631, 24, 822, 18, 163, "Text"],
Cell[1456, 44, 123, 3, 31, "Input"],
Cell[1582, 49, 297, 9, 31, "Input"],
Cell[1882, 60, 524, 15, 52, "Input"],
Cell[2409, 77, 185, 5, 31, "Input"],
Cell[2597, 84, 3410, 91, 167, "Input"],
Cell[CellGroupData[{
Cell[6032, 179, 43, 0, 43, "Subsection"],
Cell[6078, 181, 228, 7, 52, "Input"],
Cell[6309, 190, 214, 7, 52, "Input"],
Cell[6526, 199, 236, 7, 67, "Input"],
Cell[6765, 208, 233, 7, 52, "Input"],
Cell[7001, 217, 285, 9, 52, "Input"],
Cell[7289, 228, 244, 8, 52, "Input"],
Cell[CellGroupData[{
Cell[7558, 240, 249, 7, 52, "Input"],
Cell[7810, 249, 29, 0, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7888, 255, 52, 0, 43, "Subsection"],
Cell[CellGroupData[{
Cell[7965, 259, 58, 0, 34, "Subsubsection"],
Cell[8026, 261, 437, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[8488, 276, 297, 8, 52, "Input"],
Cell[8788, 286, 197, 4, 31, "Output"],
Cell[8988, 292, 50, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9075, 298, 265, 8, 31, "Input"],
Cell[9343, 308, 62, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9442, 314, 322, 9, 52, "Input"],
Cell[9767, 325, 51, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9855, 331, 324, 9, 52, "Input"],
Cell[10182, 342, 51, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10282, 349, 46, 0, 34, "Subsubsection"],
Cell[10331, 351, 485, 14, 48, "Input"],
Cell[10819, 367, 839, 24, 48, "Input"],
Cell[11661, 393, 1189, 35, 48, "Input"],
Cell[12853, 430, 543, 15, 33, "Input"],
Cell[CellGroupData[{
Cell[13421, 449, 1155, 35, 55, "Input"],
Cell[14579, 486, 204, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14820, 496, 890, 27, 33, "Input"],
Cell[15713, 525, 63, 1, 31, "Output"]
}, Open  ]],
Cell[15791, 529, 189, 6, 52, "Input"],
Cell[15983, 537, 1648, 47, 52, "Input"],
Cell[17634, 586, 1381, 41, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19052, 632, 47, 0, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[19124, 636, 170, 5, 33, "Input"],
Cell[19297, 643, 224, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19558, 653, 166, 5, 33, "Input"],
Cell[19727, 660, 50, 0, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19814, 665, 204, 6, 31, "Input"],
Cell[20021, 673, 50, 0, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20108, 678, 206, 6, 31, "Input"],
Cell[20317, 686, 50, 0, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20416, 692, 53, 0, 34, "Subsubsection"],
Cell[20472, 694, 1045, 24, 52, "Input"],
Cell[21520, 720, 329, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[21874, 734, 2876, 81, 92, "Input"],
Cell[24753, 817, 61364, 1071, 299, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86154, 1893, 2809, 81, 92, "Input"],
Cell[88966, 1976, 52341, 923, 314, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141368, 2906, 45, 0, 43, "Subsection"],
Cell[141416, 2908, 213, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[141654, 2919, 3210, 88, 137, "Input"],
Cell[144867, 3009, 27790, 592, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172694, 3606, 3119, 86, 137, "Input"],
Cell[175816, 3694, 27684, 591, 339, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203549, 4291, 49, 0, 43, "Subsection"],
Cell[CellGroupData[{
Cell[203623, 4295, 718, 22, 54, "Input"],
Cell[204344, 4319, 30, 0, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204411, 4324, 985, 28, 55, "Input"],
Cell[205399, 4354, 30, 0, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205466, 4359, 863, 25, 54, "Input"],
Cell[206332, 4386, 30, 0, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
